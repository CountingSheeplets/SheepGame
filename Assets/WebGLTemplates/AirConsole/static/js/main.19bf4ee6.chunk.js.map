{"version":3,"sources":["images/menu_view.png","images/menu/name_cloud.png","images/control-wheel.png","images/win_view.png","store/reducers/screen.js","store/reducers/menu.js","store/reducers/index.js","store/initialState.js","store/StateContext.js","store/actions/screen.js","store/actions/menu.js","components/Menu/Cloud.js","components/Views/MenuView.js","components/Healthbar.js","components/Typography.js","components/Bubble.js","components/BubbleGroup.js","components/ControlWheel.js","components/Recources.js","components/Views/MatchView.js","components/Views/VictoryView.js","components/Views/LossView.js","components/Router.js","components/MessageHandler.js","App.js","serviceWorker.js","index.js","images/healthbar.png"],"names":["module","exports","state","action","type","currentScreen","newScreen","currentHat","newHat","currentScepter","newScepter","ready","screen","menu","screenReducer","menuReducer","StateContext","createContext","StateProvider","children","Provider","value","useReducer","mainReducer","initialState","useStateValue","useContext","changeScreenToMatch","announceReady","Wrapper","styled","div","NamCloudBackground","CloudImage","img","OnClickReady","window","airconsole","message","SCREEN","NameCloud","props","src","cloudImg","alt","onClick","MenuView","dispatch","menu_view","style","maxWidth","maxHeight","position","Healthbar","healthbar","Icon","span","Text","Typography","icon","sizes","BubbleSpan","small","top","Bubble","BubblesInLine","FloatingBubbles","BubbleGroup","ControlWheelBackground","WheelImage","wheelSize","ControlWheel","controlWheelImg","Container","Recources","MatchView","VictoryView","win_view","LossView","Router","MessageHandler","useEffect","onMessage","from","data","console","log","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,0YCA5B,eAACC,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,eACH,O,yWAAO,CAAP,GACKF,EADL,CAEEG,cAAeF,EAAOG,YAG1B,QACE,OAAOJ,I,ykBCTE,eAACA,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,SACL,OAAO,KACAF,EADP,CAEIK,WAAYJ,EAAOK,SAEvB,IAAK,YACD,OAAO,KACAN,EADP,CAEIK,WAAYL,EAAMK,WAAaJ,EAAOK,SAE9C,IAAK,aACD,OAAO,KACAN,EADP,CAEIO,eAAgBN,EAAOO,aAE/B,IAAK,gBACD,OAAO,KACAR,EADP,CAEIO,eAAgBP,EAAMO,eAAiBN,EAAOO,aAEtD,IAAK,QACD,OAAO,KACAR,EADP,CAEIS,MAAOR,EAAOQ,QAEtB,QACI,OAAOT,ICzBJ,aAAmBC,GAAnB,IAAGS,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,MAA+B,CAC5CD,OAAQE,EAAcF,EAAQT,GAC9BU,KAAME,EAAYF,EAAMV,KCGX,GACbS,OATa,CACbP,cAAe,QAQPQ,KANG,CACXJ,eAAgB,EAChBF,WAAY,EACZI,MAAO,ICFIK,EAAeC,0BAEfC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,OACA,kBAACH,EAAaI,SAAd,CAAuBC,MAAOC,qBAAWC,EAAaC,IACnDL,IAIQM,EAAgB,kBAAMC,qBAAWV,ICNjCW,EAAsB,WACjC,MAAO,CACLvB,KAAM,eACNE,UAAW,UC0BFsB,EAAgB,WAC3B,MAAO,CACLxB,KAAM,QACNO,MAAO,I,uaClCX,IAAMkB,EAAUC,IAAOC,IAAV,KAMPC,EAAqBF,IAAOC,IAAV,KAOlBE,EAAaH,IAAOI,IAAV,KAKhB,SAASC,IAEPC,OAAOC,WAAWC,QAAQF,OAAOC,WAAWE,OADjC,CAAC,QAAU,eAAgB,SAAU,IAmBnCC,MAbf,SAAmBC,GAEjB,OACI,kBAACZ,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,CAAYS,IAAKC,IAAUC,IAAI,QAC7BC,QAAYV,OCdTW,MAhBf,WAAqB,IAAD,EACGrB,IAAZsB,EADS,oBAElB,OAEE,6BACE,yBACAL,IAAKM,IACLJ,IAAI,YACJK,MAAO,CAAEC,SAAU,OAAQC,UAAW,QAASC,SAAU,YACzDP,QAAS,kBAAME,EAASpB,QAExB,kBAAC,EAAD,Q,gBCJS0B,MAVf,WACE,OACE,yBACEX,IAAKY,IACLV,IAAI,YACJK,MAAO,CAAEC,SAAU,OAAQC,UAAW,QAASC,SAAU,e,4VCL/D,IAAMvB,EAAUC,IAAOC,IAAV,KAMPwB,EAAOzB,IAAO0B,KAAV,KAIJC,EAAO3B,IAAO0B,KAAV,KAcKE,MATf,YAAyC,IAAnBvC,EAAkB,EAAlBA,SAAUwC,EAAQ,EAARA,KAC9B,OACE,kBAAC,EAAD,KACE,kBAACJ,EAAD,KAAOI,GACP,kBAACF,EAAD,KAAOtC,K,+RClBb,IAAMyC,EACC,GADDA,EAEG,GAGHC,EAAa/B,IAAO0B,KAAV,KACJ,SAAAf,GAAK,OAAKA,EAAMqB,MAAQF,EAAcA,KACvC,SAAAnB,GAAK,OAAKA,EAAMqB,MAAQF,EAAcA,KAQxC,SAAAnB,GAAK,OAAIA,EAAMsB,OAWTC,MARf,SAAgBvB,GACd,OACE,kBAACoB,EAAepB,EACd,kBAAC,EAAD,a,yRCrBN,IAAMwB,EAAgBnC,IAAOC,IAAV,KAMbmC,GAAkBpC,IAAOC,IAAV,KAuBNoC,OAhBf,WACE,OACE,6BACE,kBAACF,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,GAAD,KACE,kBAAC,EAAD,CAAQJ,OAAK,EAACC,IAAK,KACnB,kBAAC,EAAD,CAAQD,OAAK,EAACC,IAAI,OAClB,kBAAC,EAAD,CAAQD,OAAK,EAACC,IAAI,W,ieCtB5B,IAEMlC,GAAUC,IAAOC,IAAV,MAOPqC,GAAyBtC,IAAOC,IAAV,KATV,SAkBZsC,GAAavC,IAAOI,IAAV,KACDoC,KAcAC,OAVf,WACE,OACE,kBAAC,GAAD,KACE,kBAACH,GAAD,KACE,kBAACC,GAAD,CAAY3B,IAAK8B,KAAiB5B,IAAI,oB,kMC3B9C,IAAM6B,GAAY3C,IAAOC,IAAV,MAkBA2C,OAVf,WACE,OACE,kBAACD,GAAD,KACE,kBAAC,EAAD,CAAYd,KAAK,gBAAjB,OACA,kBAAC,EAAD,CAAYA,KAAK,gBAAjB,OACA,kBAAC,EAAD,CAAYA,KAAK,gBAAjB,SCCSgB,OAXf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,oBCASC,OAVf,WACE,OACE,yBACElC,IAAKmC,KACLjC,IAAI,WACJK,MAAO,CAAEC,SAAU,OAAQC,UAAW,QAASC,SAAU,eCKhD0B,OAVf,WACE,OACE,yBACEpC,IAAKY,IACLV,IAAI,YACJK,MAAO,CAAEC,SAAU,OAAQC,UAAW,QAASC,SAAU,eCgBhD2B,OAjBf,WAAmB,IAAD,EACKtD,IAErB,OAHgB,oBACPb,OAEMP,eACb,IAAK,OACH,OAAO,kBAAC,EAAD,MACT,IAAK,QACH,OAAO,kBAAC,GAAD,MACT,IAAK,UACH,OAAO,kBAAC,GAAD,MACT,IAAK,OACH,OAAO,kBAAC,GAAD,MAET,QACE,OAAO,OCGE2E,OApBf,YAAqC,IAAZ7D,EAAW,EAAXA,SAAW,EACbM,IAAZsB,EADyB,oBAelC,OAbAkC,qBAAU,WACR7C,OAAOC,WAAW6C,UAAY,SAASC,EAAMC,GACzCC,QAAQC,IAAI,iBAAkBH,EAAMC,GAEX,MAArBA,EAAI,WAA8C,IAArBA,EAAI,WACR,SAArBA,EAAI,YACJrC,EAASnB,KACTmB,EAASpB,SAIpB,IAGDR,GCLWoE,OAVf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,SCGYC,QACW,cAA7BpD,OAAOqD,SAASC,UAEe,UAA7BtD,OAAOqD,SAASC,UAEhBtD,OAAOqD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAoBC,SAASC,eAAe,SD2HtD,kBAAmBC,WACrBA,UAAUC,cAActF,MAAMuF,MAAK,SAAAC,GACjCA,EAAaC,iB,kBEnInBpG,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.19bf4ee6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu_view.ca9d3410.png\";","module.exports = __webpack_public_path__ + \"static/media/name_cloud.6a2a7e48.png\";","module.exports = __webpack_public_path__ + \"static/media/control-wheel.e15b10eb.png\";","module.exports = __webpack_public_path__ + \"static/media/win_view.4ba138c8.png\";","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'changeScreen':\r\n      return {\r\n        ...state,\r\n        currentScreen: action.newScreen\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'setHat':\r\n        return {\r\n            ...state,\r\n            currentHat: action.newHat\r\n        };\r\n        case 'changeHat':\r\n            return {\r\n                ...state,\r\n                currentHat: state.currentHat + action.newHat\r\n            };\r\n        case 'setScepter':\r\n            return {\r\n                ...state,\r\n                currentScepter: action.newScepter\r\n            };\r\n        case 'changeScepter':\r\n            return {\r\n                ...state,\r\n                currentScepter: state.currentScepter + action.newScepter\r\n            };\r\n        case 'ready':\r\n            return {\r\n                ...state,\r\n                ready: action.ready\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import screenReducer from './screen';\r\nimport menuReducer from './menu';\r\n\r\nexport default ({ screen, menu }, action) => ({\r\n  screen: screenReducer(screen, action),\r\n  menu: menuReducer(menu, action)\r\n});\r\n","const screen = {\r\n  currentScreen: 'menu'\r\n};\r\nconst menu = {\r\n  currentScepter: 0,\r\n  currentHat: 0,\r\n  ready: 0\r\n};\r\nexport default {\r\n  screen, menu\r\n};","import React, { createContext, useContext, useReducer } from 'react';\r\nimport mainReducer from './reducers';\r\nimport initialState from './initialState';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ children }) => {\r\n  return (\r\n  <StateContext.Provider value={useReducer(mainReducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>)\r\n};\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","export const changeScreenToMenu = () => {\r\n  return {\r\n    type: 'changeScreen',\r\n    newScreen: 'menu'\r\n  };\r\n};\r\n\r\nexport const changeScreenToMatch = () => {\r\n  return {\r\n    type: 'changeScreen',\r\n    newScreen: 'match'\r\n  };\r\n};\r\n\r\nexport const changeScreenToVictory = () => {\r\n  return {\r\n    type: 'changeScreen',\r\n    newScreen: 'victory'\r\n  };\r\n};\r\n\r\nexport const changeScreenToLoss = () => {\r\n  return {\r\n    type: 'changeScreen',\r\n    newScreen: 'loss'\r\n  };\r\n};\r\n","export const setHat = (value) => {\r\n  return {\r\n    type: 'setHat',\r\n    newHat: value\r\n  };\r\n};\r\nexport const changeHatNext = () => {\r\n  return {\r\n    type: 'changeHat',\r\n    newHat: 1\r\n  };\r\n};\r\nexport const changeHatPrevious = () => {\r\n  return {\r\n    type: 'changeHat',\r\n    newHat: -1\r\n  };\r\n};\r\nexport const setScepter = (value) => {\r\n  return {\r\n    type: 'setScepter',\r\n    newScepter: value\r\n  };\r\n};\r\nexport const changeScepterNext = () => {\r\n  return {\r\n    type: 'changeScepter',\r\n    newScepter: 1\r\n  };\r\n};\r\nexport const changeScepterPrevious = () => {\r\n  return {\r\n    type: 'changeScepter',\r\n    newScepter: 1\r\n  };\r\n};\r\nexport const announceReady = () => {\r\n  return {\r\n    type: 'ready',\r\n    ready: 1\r\n  };\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport cloudImg from '../../images/menu/name_cloud.png';\r\n/* import { useStateValue } from '../../store/StateContext'; */\r\n\r\nconst Wrapper = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NamCloudBackground = styled.div`\r\n  width:100%;\r\n  background-color: black;\r\n  position: relative;\r\n  opacity: 50%;\r\n`;\r\n\r\nconst CloudImage = styled.img`\r\n  max-height: 75px;\r\n  margin: 20px;\r\n`;\r\n\r\nfunction OnClickReady(){\r\n  var data = {\"element\":\"ready-button\", \"pressed\":true}\r\n  window.airconsole.message(window.airconsole.SCREEN, data);\r\n}\r\n/* me.airconsole.onMessage = function(from, data) {\r\n  console.log(\"onMessage\", from, data);\r\n}; */\r\nfunction NameCloud(props) {\r\n/*   const [, dispatch] = useStateValue(); */\r\n  return (\r\n      <Wrapper>\r\n        <NamCloudBackground>\r\n          <CloudImage src={cloudImg} alt=\"cloud\"\r\n            onClick = { OnClickReady }\r\n           />\r\n        </NamCloudBackground>\r\n      </Wrapper>\r\n  );\r\n}\r\n\r\nexport default NameCloud;\r\n","import React from 'react';\r\nimport menu_view from '../../images/menu_view.png';\r\nimport { useStateValue } from '../../store/StateContext';\r\nimport { changeScreenToMatch } from '../../store/actions';\r\nimport NameCloud from '../../components/Menu/Cloud';\r\n\r\nfunction MenuView() {\r\n  const [, dispatch] = useStateValue();\r\n  return (\r\n\r\n    <div>\r\n      <img\r\n      src={menu_view}\r\n      alt=\"menu_view\"\r\n      style={{ maxWidth: '100%', maxHeight: '100vh', position: 'absolute' }}\r\n      onClick={() => dispatch(changeScreenToMatch())}\r\n    />\r\n      <NameCloud></NameCloud>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuView;\r\n","import React from 'react';\r\nimport healthbar from '../images/healthbar.png';\r\n\r\nfunction Healthbar() {\r\n  return (\r\n    <img\r\n      src={healthbar}\r\n      alt=\"healthbar\"\r\n      style={{ maxWidth: '100%', maxHeight: '100vh', position: 'absolute' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Healthbar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  margin-bottom: -10px;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-size: 35px;\r\n  font-weight: 500;\r\n`;\r\n\r\nfunction Typography({ children, icon }) {\r\n  return (\r\n    <Wrapper>\r\n      <Icon>{icon}</Icon>\r\n      <Text>{children}</Text>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Typography from './Typography';\r\n\r\nconst sizes = {\r\n  big: 75,\r\n  small: 55\r\n};\r\n\r\nconst BubbleSpan = styled.span`\r\n  height: ${props => (props.small ? sizes.small : sizes.big)}px;\r\n  width: ${props => (props.small ? sizes.small : sizes.big)}px;\r\n  background-color: #bbb;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  position: relative;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 5px;\r\n  top: ${props => props.top}px;\r\n`;\r\n\r\nfunction Bubble(props) {\r\n  return (\r\n    <BubbleSpan {...props}>\r\n      <Typography>10</Typography>\r\n    </BubbleSpan>\r\n  );\r\n}\r\n\r\nexport default Bubble;\r\n","import React from 'react';\r\nimport Bubble from './Bubble';\r\nimport styled from 'styled-components';\r\n\r\nconst BubblesInLine = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FloatingBubbles = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n`;\r\n\r\nfunction BubbleGroup() {\r\n  return (\r\n    <div>\r\n      <BubblesInLine>\r\n        <Bubble></Bubble>\r\n        <Bubble></Bubble>\r\n        <FloatingBubbles>\r\n          <Bubble small top={85}></Bubble>\r\n          <Bubble small top=\"75\"></Bubble>\r\n          <Bubble small top=\"85\"></Bubble>\r\n        </FloatingBubbles>\r\n      </BubblesInLine>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BubbleGroup;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport controlWheelImg from '../images/control-wheel.png';\r\n\r\nconst wheelSize = 300;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 100px;\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ControlWheelBackground = styled.div`\r\n  height: ${wheelSize}px;\r\n  width: ${wheelSize}px;\r\n  background-color: red;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  opacity: 50%;\r\n`;\r\n\r\nconst WheelImage = styled.img`\r\n  max-width: ${wheelSize - 40}px;\r\n  margin: 20px;\r\n`;\r\n\r\nfunction ControlWheel() {\r\n  return (\r\n    <Wrapper>\r\n      <ControlWheelBackground>\r\n        <WheelImage src={controlWheelImg} alt=\"controlWheel\" />\r\n      </ControlWheelBackground>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default ControlWheel;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Typography from './Typography';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nfunction Recources() {\r\n  return (\r\n    <Container>\r\n      <Typography icon=\"🔥\">100</Typography>\r\n      <Typography icon=\"🔥\">100</Typography>\r\n      <Typography icon=\"🔥\">100</Typography>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Recources;\r\n","import React from 'react';\r\n\r\nimport Healthbar from '../Healthbar';\r\nimport BubbleGroup from '../BubbleGroup';\r\nimport ControlWheel from '../ControlWheel';\r\nimport Recources from '../Recources';\r\n\r\nfunction MatchView() {\r\n  return (\r\n    <div>\r\n      <Healthbar></Healthbar>\r\n      <Recources></Recources>\r\n      <BubbleGroup></BubbleGroup>\r\n      <ControlWheel></ControlWheel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchView;\r\n","import React from 'react';\r\nimport win_view from '../../images/win_view.png';\r\n\r\nfunction VictoryView() {\r\n  return (\r\n    <img\r\n      src={win_view}\r\n      alt=\"win_view\"\r\n      style={{ maxWidth: '100%', maxHeight: '100vh', position: 'absolute' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default VictoryView;\r\n","import React from 'react';\r\nimport healthbar from '../../images/healthbar.png';\r\n\r\nfunction LossView() {\r\n  return (\r\n    <img\r\n      src={healthbar}\r\n      alt=\"healthbar\"\r\n      style={{ maxWidth: '100%', maxHeight: '100vh', position: 'absolute' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LossView;\r\n","import React from 'react';\r\nimport MenuView from './Views/MenuView';\r\nimport MatchView from './Views/MatchView';\r\nimport VictoryView from './Views/VictoryView';\r\nimport LossView from './Views/LossView';\r\nimport { useStateValue } from '../store/StateContext';\r\n\r\nfunction Router() {\r\n  const [{ screen }] = useStateValue();\r\n\r\n  switch (screen.currentScreen) {\r\n    case 'menu':\r\n      return <MenuView></MenuView>;\r\n    case 'match':\r\n      return <MatchView></MatchView>;\r\n    case 'victory':\r\n      return <VictoryView></VictoryView>;\r\n    case 'loss':\r\n      return <LossView></LossView>;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\nexport default Router;\r\n","import React, {useEffect} from 'react';\r\nimport { useStateValue } from '../store/StateContext';\r\nimport { announceReady, changeScreenToMatch } from '../store/actions';\r\n\r\nfunction MessageHandler({children}) {\r\n  const [, dispatch] = useStateValue();\r\n  useEffect(() => {\r\n    window.airconsole.onMessage = function(from, data) {\r\n        console.log(\"MessageHandler\", from, data);\r\n\r\n        if (data[\"show_view\"] != null && data[\"show_view\"] != \"\"){\r\n            if (data[\"show_view\"] == \"match\"){\r\n                dispatch(announceReady())\r\n                dispatch(changeScreenToMatch())\r\n            }\r\n        }\r\n    };\r\n  }, [])\r\n\r\n  return (\r\n    children\r\n  );\r\n}\r\n\r\nexport default MessageHandler;\r\n","import React from 'react';\r\nimport Router from './components/Router';\r\nimport { StateProvider } from './store/StateContext';\r\nimport MessageHandler from './components/MessageHandler';\r\n\r\nfunction App() {\r\n  return (\r\n    <StateProvider>\r\n      <MessageHandler>\r\n        <Router></Router>\r\n      </MessageHandler>\r\n    </StateProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GameController from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<GameController />, document.getElementById('root'));\r\n// eslint-disable-next-line\r\n// const airconsole = new AirConsole();\r\n// eslint-disable-next-line\r\n// eslint-disable-next-line\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/healthbar.27c5d136.png\";"],"sourceRoot":""}